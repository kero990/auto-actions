name: Build wiliwili self

on:
  workflow_dispatch:

jobs:
  build-and-package:
    name: Build and Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: amd64
            os: ubuntu-latest
          - platform: arm64
            os: self-hosted
    container: debian:10
    defaults:
      run:
        shell: bash

    steps:
    - name: Install dependencies
      run: |
        apt update
        apt install -y libcurl4-openssl-dev libmpv-dev libwebp-dev libxrandr-dev libxinerama-dev libxcursor-dev libdbus-1-dev libxi-dev git make gcc g++ wget curl jq unzip
        apt install -y libssl-dev libmbedtls-dev zlib1g-dev 
        apt install -y libwayland-dev libxkbcommon-dev xorg-dev

    - name: Clone repository
      run: |
        git clone --recursive https://github.com/xfangfang/wiliwili.git
      
    - name: cmake
      uses: lukka/get-cmake@latest
              
    - name: Build application for ${{ matrix.platform }}
      run: |
        cd wiliwili
        cmake -B build -DPLATFORM_DESKTOP=ON
        make -C build wiliwili -j$(nproc)
     

    - name: Prepare package files
      run: |
        cd wiliwili
        mkdir -p deb/DEBIAN
        mkdir -p deb/opt/apps/com.github.wiliwili/entries/applications
        mkdir -p deb/opt/apps/com.github.wiliwili/entries/icons/hicolor/scalable/apps
        mkdir -p deb/opt/apps/com.github.wiliwili/files
        wget https://github.com/xfangfang/wiliwili/raw/yoga/resources/svg/cn.xfangfang.wiliwili.svg -O deb/opt/apps/com.github.wiliwili/entries/icons/hicolor/scalable/apps/com.github.wiliwili.svg
        mv build/wiliwili deb/opt/apps/com.github.wiliwili/files/
        mv build/resources deb/opt/apps/com.github.wiliwili/files/

        cat > deb/opt/apps/com.github.wiliwili/entries/applications/wiliwili.desktop << EOF
        [Desktop Entry]
        Name=wiliwili
        Version=VERSION_NUMBER
        Exec=/opt/apps/com.github.wiliwili/files/wiliwili
        Icon=com.github.wiliwili
        Type=Application
        Terminal=false
        StartupNotify=true
        Encoding=UTF-8
        Categories=Video;
        Path=/opt/apps/com.github.wiliwili/files/
        Architecture=${{ matrix.platform }}
        EOF

        cat > deb/opt/apps/com.github.wiliwili/info << EOF
        {
          "appid": "com.github.wiliwili",
          "name": "wiliwili",
          "version": "VERSION_NUMBER",
          "arch": ["${{ matrix.platform }}"],
          "permissions": {
            "autostart": false,
            "notification": true,
            "trayicon": true,
            "clipboard": true,
            "account": true,
            "bluetooth": false,
            "camera": true,
            "audio_record": true,
            "installed_apps": false
          }
        }
        EOF

        cat > deb/DEBIAN/control << EOF
        Package: com.github.wiliwili
        Version: VERSION_NUMBER
        Installed-Size: 21000
        Maintainer: kero990 <kero990@qq.com>
        Section: video
        Architecture: ${{ matrix.platform }}
        Priority: optional
        Description: 专为手柄控制设计的第三方跨平台B站客户端，完美复刻官方UI，体积极小，支持硬解
          专为手柄控制设计的第三方跨平台B站客户端，完美复刻官方UI，体积极小，支持硬解
        EOF

    - name: Get and replace release version for ${{ matrix.platform }}
      id: get_release_version
      run: |
            cd wiliwili
            release_version=$(curl -sL https://api.github.com/repos/xfangfang/wiliwili/releases/latest | jq -r '.tag_name' | sed 's/^v//')
            if [ -z "$release_version" ]; then
              while [ -z "$release_version" ]; do
                release_version=$(curl -sL https://api.github.com/repos/xfangfang/wiliwili/releases/latest | jq -r '.tag_name' | sed 's/^v//')
              done
            fi
            echo "::set-output name=release_version::$release_version"
            echo "Release version: $release_version"
            sed -i "s/VERSION_NUMBER/${release_version}/g" deb/opt/apps/com.github.wiliwili/entries/applications/wiliwili.desktop
            sed -i "s/VERSION_NUMBER/${release_version}/g" deb/opt/apps/com.github.wiliwili/info
            sed -i "s/VERSION_NUMBER/${release_version}/g" deb/DEBIAN/control

    - name: Package Debian package for ${{ matrix.platform }}
      run: |
        cd wiliwili
        dpkg-deb -b deb
        mv deb.deb com.github.wiliwili_${{ steps.get_release_version.outputs.release_version }}_${{ matrix.platform }}.deb
        
    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
           name: wiliwili ${{ steps.get_release_version.outputs.release_version }} ${{ matrix.platform }}
           tag: wiliwili_${{ steps.get_release_version.outputs.release_version }}_${{ matrix.platform }}
           omitBodyDuringUpdate: true
           body: This release is built by github-action.
           token: ${{ secrets.GITHUB_TOKEN }}
           allowUpdates: true
           artifacts: >
              ./wiliwili/com.github.wiliwili_${{ steps.get_release_version.outputs.release_version }}_${{ matrix.platform }}.deb
