name: Build and Modify Logseq

on:
  workflow_dispatch:

jobs:
  build-and-package:
    name: Build and Package
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-latest
            node_arch: x64
            rust_target: x86_64-unknown-linux-gnu
            rsapi_filename: rsapi.linux-x64-gnu.node
            logseq_arch: x64
          - arch: aarch64
            runner: ubuntu-latest-arm
            node_arch: arm64
            rust_target: aarch64-unknown-linux-gnu
            rsapi_filename: rsapi.linux-arm64-gnu.node
            logseq_arch: arm64

    container:
      image: debian:10

    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            curl \
            git \
            pkg-config \
            libssl-dev \
            unzip \
            wget \
            git make gcc g++ wget curl jq unzip

      - name: Install Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          architecture: ${{ matrix.node_arch }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.rust_target }}
          override: true

      - name: Install Yarn
        run: npm install -g yarn

      - name: Clone and build rsapi
        run: |
          git clone https://github.com/logseq/rsapi
          cd rsapi
          yarn install
          yarn build -- --target ${{ matrix.rust_target }}
          ls -la packages/rsapi/

      - name: Upload rsapi artifact
        uses: actions/upload-artifact@v3
        with:
          name: rsapi-${{ matrix.arch }}
          path: rsapi/packages/rsapi/${{ matrix.rsapi_filename }}

      - name: Get latest Logseq release
        run: |
          LATEST_RELEASE=$(curl -s "https://api.github.com/repos/logseq/logseq/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Latest release: $LATEST_RELEASE"
          wget "https://github.com/logseq/logseq/releases/download/$LATEST_RELEASE/Logseq-linux-${{ matrix.logseq_arch }}.zip" -O logseq.zip
          unzip logseq.zip -d logseq-app

      - name: Replace rsapi in Logseq
        run: |
          mkdir -p logseq-app/Logseq-linux-${{ matrix.logseq_arch }}/resources/app/node_modules/@logseq/rsapi-linux-${{ matrix.logseq_arch }}-gnu/
          cp rsapi/packages/rsapi/${{ matrix.rsapi_filename }} logseq-app/Logseq-linux-${{ matrix.logseq_arch }}/resources/app/node_modules/@logseq/rsapi-linux-${{ matrix.logseq_arch }}-gnu/${{ matrix.rsapi_filename }}
          ls -la logseq-app/Logseq-linux-${{ matrix.logseq_arch }}/resources/app/node_modules/@logseq/rsapi-linux-${{ matrix.logseq_arch }}-gnu/

      - name: Prepare package files
        run: |
          mkdir -p deb/DEBIAN
          mkdir -p deb/opt/apps/com.logseq.desktop/entries/applications
          mkdir -p deb/opt/apps/com.logseq.desktop/entries/icons/hicolor/512x512/apps
          mkdir -p deb/opt/apps/com.logseq.desktop/files
          cp logseq-app/Logseq-linux-${{ matrix.logseq_arch }}/resources/app/icons/logseq.png deb/opt/apps/com.logseq.desktop/entries/icons/hicolor/512x512/apps/com.logseq.desktop.png
          mv logseq-app/Logseq-linux-${{ matrix.logseq_arch }}/* deb/opt/apps/com.logseq.desktop/files/

          cat > deb/opt/apps/com.logseq.desktop/entries/applications/logseq.desktop << EOF
          [Desktop Entry]
          Name=Logseq
          Version=VERSION_NUMBER
          Exec=/opt/apps/com.logseq.desktop/files/Logseq
          Icon=com.logseq.desktop
          Type=Application
          Terminal=false
          StartupNotify=true
          Encoding=UTF-8
          Categories=TextEditor;
          Path=/opt/apps/com.logseq.desktop/files/
          Architecture=${{ matrix.logseq_arch }}
          EOF

          cat > deb/opt/apps/com.logseq.desktop/info << EOF
          {
            "appid": "com.logseq.desktop",
            "name": "Logseq",
            "version": "VERSION_NUMBER",
            "arch": ["${{ matrix.logseq_arch }}"],
            "permissions": {
            "autostart": false,
            "notification": true,
            "trayicon": true,
            "clipboard": true,
            "account": true,
            "bluetooth": false,
            "camera": true,
            "audio_record": true,
            "installed_apps": false
            }
          }
          EOF

          cat > deb/DEBIAN/control << EOF
          Package: com.logseq.desktop
          Version: VERSION_NUMBER
          Installed-Size: 196264
          Maintainer: kero990 <kero990@qq.com>
          Section: text
          Architecture: ${{ matrix.logseq_arch }}
          Priority: optional
          Description: Logseq是一个隐私优先、开源的知识管理和协作平台
          EOF

      - name: Get and replace release version
        id: get_release_version
        run: |
            release_version=$(curl -sL https://api.github.com/repos/logseq/logseq/releases/latest | jq -r '.tag_name' | sed 's/^v//')
            if [ -z "$release_version" ]; then
              while [ -z "$release_version" ]; do
                release_version=$(curl -sL https://api.github.com/repos/logseq/logseq/releases/latest | jq -r '.tag_name' | sed 's/^v//')
              done
            fi
            echo "::set-output name=release_version::$release_version"
            echo "Release version: $release_version"
            sed -i "s/VERSION_NUMBER/${release_version}/g" deb/opt/apps/com.logseq.desktop/entries/applications/logseq.desktop
            sed -i "s/VERSION_NUMBER/${release_version}/g" deb/opt/apps/com.logseq.desktop/info
            sed -i "s/VERSION_NUMBER/${release_version}/g" deb/DEBIAN/control

      - name: Package Debian package
        run: |
          dpkg-deb -b deb
          mv deb.deb com.logseq.desktop_${{ steps.get_release_version.outputs.release_version }}_${{ matrix.logseq_arch }}.deb
        
      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
           name: logseq ${{ steps.get_release_version.outputs.release_version }}
           tag: logseq_${{ steps.get_release_version.outputs.release_version }}
           omitBodyDuringUpdate: true
           body: This release is built by github-action.
           token: ${{ secrets.GITHUB_TOKEN }}
           allowUpdates: true
           artifacts: >
              com.logseq.desktop_${{ steps.get_release_version.outputs.release_version }}_${{ matrix.logseq_arch }}.deb
