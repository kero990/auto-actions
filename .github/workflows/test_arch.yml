name: Repack Brave Browser

on:
  workflow_dispatch:

jobs:
  repack:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-buster

    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      # 1. 检出仓库
      - uses: actions/checkout@v3

      # 2. 安装打包及下载工具
      - name: Prepare tools
        run: |
          apt-get update
          apt-get install -y wget dpkg-dev

      # 3. 获取最新版及下载链接
      - name: Get Brave version and url
        id: getver
        run: |
          LATEST_URL="https://github.com/brave/brave-browser/releases/latest"
          VERSION=$(wget -qO- $LATEST_URL | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+' | head -1 | sed 's/v//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          # 设置架构
          ARCH="${{ matrix.arch }}"
          # 生成下载链接
          if [ "$ARCH" = "amd64" ]; then
            DEB_URL="https://github.com/brave/brave-browser/releases/download/v${VERSION}/brave-browser_${VERSION}_amd64.deb"
          else
            DEB_URL="https://github.com/brave/brave-browser/releases/download/v${VERSION}/brave-browser_${VERSION}_arm64.deb"
          fi
          echo "deb_url=$DEB_URL" >> $GITHUB_OUTPUT

      # 4. 下载官方DEB包
      - name: Download Brave
        run: wget -O brave.deb "${{ steps.getver.outputs.deb_url }}"

      # 5. 解包、替换文件、重打包
      - name: Repack as Deepin spec
        run: |
          set -e
          VERSION="${{ steps.getver.outputs.version }}"
          ARCH="${{ matrix.arch }}"
          APP_NAME=brave-browser
          # 创建工作目录
          mkdir -p work
          dpkg-deb -R brave.deb work/origin

          # 覆盖control和desktop文件, 并替换变量
          cp assets/brave/control work/origin/DEBIAN/control
          cp assets/brave/com.brave.brave-browser.desktop work/origin/usr/share/applications/com.brave.brave-browser.desktop

          # 替换control、desktop中的VVVV为$VERSION，AAAA为$ARCH
          sed -i "s/VVVV/$VERSION/g;s/AAAA/$ARCH/g" work/origin/DEBIAN/control
          sed -i "s/VVVV/$VERSION/g;s/AAAA/$ARCH/g" work/origin/usr/share/applications/com.brave.brave-browser.desktop

          # 校正规范（如/DEBIAN、/usr/share/applications等均已就位）
          # 重新打包
          dpkg-deb --build work/origin "${APP_NAME}_${VERSION}_${ARCH}_deepin.deb"

      # 6. 上传结果
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: brave-${{ matrix.arch }}
          path: brave-browser_${{ steps.getver.outputs.version }}_${{ matrix.arch }}_deepin.deb
